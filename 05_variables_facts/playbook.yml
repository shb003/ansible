---
- name: 웹서버 설정 및 확인(인증)
  hosts: ansible1.example.com
  gather_facts: yes
  vars_files:
    - vars/vars.yml
  tasks:
    # 1. 패키지 설치 - firewalld httpd mod_ssl
    # 2. 웹서비스 설정 
    # 2-1. /etc/httpd/conf/httpd.conf
    # 2-2. /var/www/html/.htaccess (files/.htaccess)
    # 2-2-1* /etc/httpd/secrets 디렉토리 생성
    # 2-3. /etc/httpd/secrets/htpasswd (files/htpasswd)
    # * /etc/httpd/secrets/htpasswd 파일 배포
    # 2-4. /var/www/html/index.html (using the facts)
    # * ansible1.example.com - ip
    # 3. 서비스 기동 - firewalld httpd
    # 4. 방화벽 서비스 등록 - http, https
    # 5. test - 인증


    # 1. 패키지 설치 - firewalld httpd mod_ssl
    - name: 패키지 설치 - firewalld ,httpd, mod_ssl
      yum: 
        name: 
          - "{{ pkg_fw }}"
          - "{{ pkg_web }}"
          - "{{ pkg_https }}"
        state: latest

    - name: 2-1. /etc/httpd/conf/httpd.conf
      copy:
        src: "{{ conf_httpd_src }}"
        dest: "{{ conf_httpd_dest }}"
        owner: root
        group: root
        mode: '0644'

    - name: 2-2. /var/www/html/.htaccess (files/.htaccess)
      copy:
        src: "{{ htaccess_src }}"
        dest: "{{ htaccess_dest }}"
        owner: apache
        group: apache
        mode: '0400'

    - name: 2-2-1. /etc/httpd/secrets 디렉토리 생성
      file:
        path: "{{ secrets_dir}}"
        state: directory
        owner: apache
        group: apache
        mode: '0400'

    - name: 2-3. /etc/httpd/secrets/htpasswd 파일배포
      copy:
        src: "{{ secrets_src }}"
        dest: "{{ secrets_dest }}"
        owner: apache
        group: apache
        mode: '0400'

    - name: 2-4. /var/www/html/index.html
      copy:
        content: "Hostname: {{ ansible_hostname }}, - IPv4: {{ ansible_default_ipv4.address }}"
        dest: "{{ web_root }}/index.html"
  
    - name: 3. 서비스 기동 - firewalld httpd
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - "{{ svc_fw }}"
        - "{{ svc_web }}"

    - name: 4. 방화벽 서비스 등록 - https, http
      firewalld: 
        service: "{{ item }}"
        immediate: true
        permanent: true
        state:  enabled
      with_items:
        - "{{ fw_http }}"
        - "{{ fw_https }}"

#5. test - 인증
- name: 5. test - 인증
  hosts: localhost
  vars_files:
    - vars/secrets.yml
    - vars/vars2.yml
  tasks:   
    - name: 웹서버 테스트 - basic authentication
      uri:
        url: "{{ item }}"
        user: "{{ web_user }}"
        password: "{{ web_pass }}"
        validate_certs: false
        force_basic_auth: yes
        status_code: 200
      with_items:
        - "{{ request_url1 }}"
        - "{{ request_url2 }}"


    # 프로그램 실행 시 명령어!
    # anp playbook.yml --ask-vault-password

